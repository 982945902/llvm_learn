load("@llvm-project//mlir:tblgen.bzl", "gentbl_cc_library", "gentbl_filegroup", "td_library")
load("@rules_cc//cc:defs.bzl", "cc_library","cc_binary")

package(default_visibility = ["//visibility:public"])

td_library(
    name = "toy_dialect_td",
    srcs = [
        "ShapeInferenceInterface.td",
        "ToyCombine.td",
        "Ops.td",
    ],
    deps = [
        "@llvm-project//mlir:InferTypeOpInterfaceTdFiles",
        "@llvm-project//mlir:OpBaseTdFiles",
        "@llvm-project//mlir:SideEffectInterfacesTdFiles",
        "@llvm-project//mlir:FunctionInterfacesTdFiles",
        "@llvm-project//mlir:CallInterfacesTdFiles",
        "@llvm-project//mlir:CastInterfacesTdFiles",
    ],
)

gentbl_cc_library(
    name = "toy_dialect",
    tbl_outs = [
        (
            ["-gen-dialect-decls"],
            "Dialect.h.inc",
        ),
        (
            ["-gen-dialect-defs"],
            "Dialect.cpp.inc",
        ),
        (
            ["-gen-op-decls"],
            "Ops.h.inc",
        ),
        (
            ["-gen-op-defs"],
            "Ops.cpp.inc",
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "Ops.td",
    deps = [
        ":toy_dialect_td",
    ]
)

gentbl_cc_library(
    name = "toy_dialect_pa",
    tbl_outs = [
        (
            ["-gen-rewriters"],
            "ToyCombine.inc"
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "ToyCombine.td",
    deps = [
        ":toy_dialect_td",
    ]
)

gentbl_cc_library(
    name = "toy_dialect_shape_infer",
    tbl_outs = [
        (
            ["-gen-op-interface-decls"],
            "ShapeInferenceOpInterfaces.h.inc"
        ),
        (
            ["-gen-op-interface-defs"],
            "ShapeInferenceOpInterfaces.cpp.inc"
        ),
    ],
    tblgen = "@llvm-project//mlir:mlir-tblgen",
    td_file = "ShapeInferenceInterface.td",
    deps = [
        ":toy_dialect_td",
    ]
)

cc_binary(
    name = "toy",
    srcs = ["toy.cc","AST.cc","AST.h","Lexer.h","Parser.h","MLIRGen.h","MLIRGen.cpp","Dialect.h","Dialect.cpp","ToyCombine.cpp","ShapeInferenceInterface.h","ShapeInferencePass.cpp","Passes.h","LowerToAffineLoops.cpp"],
    deps = [
        ":toy_dialect",
        ":toy_dialect_pa",
        ":toy_dialect_shape_infer",
        "@llvm-project//llvm:Support",
        "@llvm-project//mlir:Pass",
        "@llvm-project//mlir:Transforms",
        "@llvm-project//mlir:CastInterfaces",
        "@llvm-project//mlir:CallOpInterfaces",
        "@llvm-project//mlir:AffineDialect",
        "@llvm-project//mlir:FuncDialect",
        "@llvm-project//mlir:AffineTransforms",
        "@llvm-project//mlir:AllPassesAndDialects",
        "@llvm-project//mlir:AllExtensions",
    ],
)


